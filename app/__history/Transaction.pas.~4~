{
  Transaction unit
  Class for all creating transactions and storing their relevant information
  i.e., amount, date, time, deposit / widthdrawal and if it was successful
}
unit Transaction;

  //  Public functions, variables etc.
  interface

    uses
      System.SysUtils,
      System.TypInfo;

    type

      {
        Enum for transaction types
        Possible values - "Deposit" or "Withdrawal"
      }
      TTransactionType = (Deposit, Withdrawal);

      {
        Enum for transaction statuses
        Possible values - "Success" or "Fail"
      }
      TTransactionStatus = (Success, Fail);


      {
        Class for Bank type
      }
      TTransaction = class

        private
          FTransactionID: integer;
          FTimestamp: TDateTime;
          FTransactionType: TTransactionType;
          FAmount: integer;
          FStatus: TTransactionStatus;

        public
          constructor Create(ATransactionID: integer; ATimeStamp: TDateTime; ATransactionType: TTransactionType; AAmount: integer; AStatus: TTransactionStatus);
          destructor Destroy; override;
          function ToString: string; override;

    end;

  //  Unit logic
  implementation

    //  Implement the Bank class
    constructor TTransaction.Create(ATransactionID: integer; ATimeStamp: TDateTime; ATransactionType: TTransactionType; AAmount: integer; AStatus: TTransactionStatus);
    begin

      self.FTransactionID:= ATransactionID;
      self.FTimestamp:= ATimeStamp;
      self.FTransactionType:= ATransactionType;
      self.FAmount:= AAmount;
      self.FStatus:= AStatus

    end;


    destructor TTransaction.Destroy;
    begin

      //FOpenAccount.Free;
      inherited;

    end;

    function TTransaction.ToString: string;
    begin

      Result := 'ID: ' + IntToStr(self.FTransactionID) + sLineBreak +
                'Timestamp: ' + DateTimeToStr(self.FTimestamp) + sLineBreak +
                'Type: ' + GetEnumName(TypeInfo(TTransactionType), Ord(self.FTransactionType)) + sLineBreak +
                'Amount: ' + IntToStr(self.FAmount) + sLineBreak +
                'Status: ' + GetEnumName(TypeInfo(TTransactionStatus), Ord(self.FStatus));

    end;

end.
